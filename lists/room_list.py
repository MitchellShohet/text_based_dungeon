import random
from classes.dungeon.room_components import Exit, MonsterSpawning
from classes.dungeon.room import Room
from lists.monsters_list import Goblin, Skeleton, Wizard, MudGolem, Minotaur, Avatar, MagmaGoblin, FlyingGoblin
from lists.interactables_list import Owl, Pool, SleepingMinotaur, Artisan, Breakable, Inspectable, Chasm, RedHerring, GlowingCrystal, ExitHold, Chest, MagmaRiver, MoneyTree, Tree, Cauldron, NPC, ShopOwner, GlowingTree, Fairy
from lists.items_lists import weapon_options, armor_options, misc_options, Pie, HealthPotion, StatMedallion, PowerBerry, DurabilityGem, MagicWand, SmokeBomb, GreaterHealthPotion
from lists.adjustments_list import block_exit, obtain_item, golem_machinery, adjustment_print, remove_item, inspect_crystal, inspect_machine, break_the_table, clear_cave_in, add_interactable, add_owl, teleport_sequence, add_to_interactable, money_tree_refresh, change_room_description, change_room, add_monsters, change_monster_spawning, shop_refresh, sea_creature_defeated, tree_inspect_renew, damage_player

room_list = [ 
    [
        Room("Placeholder Rooms Maxed", 
            'A deadend with a sign that reads "Sorry, more rooms will be added soon!"', 
            [Exit(0), Exit(1)]) #the second exit needs to be removed when this room is updated (maybe)
        ],
    [
        Room("DUNGEON ENTRANCE", 
            "Here's a short placeholder description about the Dungeon Entrance.", 
            [Exit(0, Room("Go Home", 
                        "You decide not to explore the dungeon. Probably a good idea.", 
                        None)), Exit(1), Exit(2)]),
        # Room("POND ROOM", 
        #     "A room with a small pond.", 
        #     [Exit(0), Exit(1), Exit(2)], 
        #     MonsterSpawning(1, Goblin, 5, Skeleton), 
        #     [Pool(0, ["SWIM", "THROW ROCKS"], "A naturally formed pool of cave water. It's roughly the size of a small market.")],
        #     [[add_to_interactable, change_room_description],
        #         [sea_creature_defeated], 
        #         {"add_to_interactable" : [2, "INSPECT SHADOW"],
        #         "change_room_description" : [2, "A room with a small pond... Wait- there's a shadow in the water that wasn't there before."],
        #         "damage_player" : ["Your armor is too heavy to swim in!", 2]}]),
        # Room("GLOWING CRYSTALS ROOM", 
        #     "A room with some glowing crystals.", 
        #     [Exit(0), Exit(1), Exit(2), Exit(3)], 
        #     MonsterSpawning(5, Goblin, 8, Skeleton), 
        #     [GlowingCrystal(1, ["SHATTER", "INSPECT"], " human baby.", challenge=5), 
        #         GlowingCrystal(2, ["SHATTER", "INSPECT"], " chair.", challenge=8), 
        #         GlowingCrystal(3, ["SHATTER", "INSPECT"], "n adult horse.", challenge=11)]),
        Room("FOUNTAIN ROOM", 
            "You come across a large fountain, the white marble gently glowing against the dim light. The water is fairly shallow- maybe three feet deep, and there's a statue nearby of a dwarven lad reading a book.", 
            [Exit(0), Exit(1), Exit(2)], 
            MonsterSpawning(7, Wizard), 
            [Pool(0, ["SWIM", "THROW ROCKS"], "A mysterious fountain that has an eerie (albeit welcoming) aura."),
            Chest(0, ["BREAK THE LOCK", "USE A KEY"], " that looks kinda tough.", challenge=6, contents=[40, StatMedallion(), misc_options["MINOTAUR HORN"]])]),
        Room("LAKE ROOM", 
            "You hear the sound of water lapping against rocks. To your side there's a rocky bank and a large lake. You see a shadow beneath the water about 20 feet out.", 
            [Exit(0), Exit(1), Exit(2)], 
            MonsterSpawning(4, Wizard, 9, "TWICE"), 
            [Pool(0, ["SWIM", "INSPECT SHADOW", "THROW ROCKS"], "A large underground lake, it's edges lost to the darkness.")],
            [[], [sea_creature_defeated], {"damage_player" : ["Your armor is too heavy to swim in!", 2]}]),
        # Room("SKELETON CAMP",
        #     "You see a fire pit illuminating a scattering of small tents. Multiple skeletons meander amongst them, it seems this is their camp.",
        #     [Exit(0), Exit(1), Exit(2), Exit(3)],
        #     MonsterSpawning(100, Skeleton, 2, "TWICE"),
        #     [Breakable("TENT", 1, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 3),
        #     Breakable("TENT", 2, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 3),
        #     Breakable("TENT", 3, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 3, Skeleton),
        #     Breakable("TENT", 4, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 4),
        #     Breakable("TENT", 5, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 3, Skeleton),
        #     Breakable("TENT", 6, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 2, DurabilityGem),
        #     Breakable("TENT", 7, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 2, StatMedallion),
        #     Breakable("TENT", 8, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 2, Skeleton),
        #     Breakable("TENT", 9, ["SMASH"], "A small tent that belongs to some skeleton.", 1, 3),],
        #     [[add_monsters, change_monster_spawning],
        #                 [], 
        #                 {"add_monsters" : [1, 7, Skeleton], "change_monster_spawning" : [2, MonsterSpawning(1, Skeleton, 2, "TWICE")]}]),
        Room("SKELETON SWARM ROOM",
            "An open room with a huge stretch towards the exits, it smells of SKELETONS.",
            [Exit(0), Exit(1), Exit(2)],
            MonsterSpawning(100, Skeleton),
            adjustments=[[add_monsters, change_monster_spawning],
                        [], 
                        {"add_monsters" : [1, 4, Skeleton], "change_monster_spawning" : [2, MonsterSpawning(1, Skeleton, 5, "TWICE")]}]),
        Room("WIZARD SWARM ROOM",
            "An open room with a huge stretch towards the exits, it smells of WIZARD.",
            [Exit(0), Exit(1), Exit(2)],
            MonsterSpawning(100, Wizard),
            adjustments=[[add_monsters, change_monster_spawning],
                        [], 
                        {"add_monsters" : [1, 4, Wizard], "change_monster_spawning" : [2, MonsterSpawning(1, Wizard, 8, "TWICE")]}]),
        Room("MINOTAUR SWARM ROOM",
            "An open room with a huge stretch towards the exit, it smells of MINOTAUR.",
            [Exit(0), Exit(1), Exit(2)],
            MonsterSpawning(100, Minotaur),
            adjustments=[[add_monsters, change_monster_spawning],
                        [], 
                        {"add_monsters" : [1, 2, Minotaur], "change_monster_spawning" : [2, MonsterSpawning(2, Minotaur, 8, "TWICE")]}]),
        Room("JUNIOR ALCHEMIST",
            "A small grove of large red mushrooms, it smells very strongly of cherries. You see a young person has set up a shop here. They have workstations with mixing vials, books, and a sizable cauldron.", 
            [Exit(0)],
            None,
            [ShopOwner(0, 
                        ["TALK", "ROB", "BUY", "SELL"], 
                        "A junior alchemist, learning the trade.", 
                        "CARTER", 
                        ["they", "them", "theirs", "their", "themself"], 
                        ["I've been studying down here for two years, even starting to get some more advanced stuff.", "Hey you didn't pay for that!", "No, we're done. Get out", "Sure I'll buy! What've you got?", "Thanks! Please come visit again!", "Yeah you don't have anything to sell me.", "The mushrooms make great health potions so I can sell them for cheap!", "Hey you bought out my whole stock, thanks! I'll get working on a new batch soon."], 
                        10, 
                        [HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion()],
                        1),
                Cauldron(0, ["COOK"], "", True)],
            [[shop_refresh], [], {"shop_refresh" : [2, [HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion()]]}]),
        # Room("MONEY TREE ROOM",
        #     "A room with a money tree placeholder description lol",
        #     [Exit(0), Exit(1)],
        #     MonsterSpawning(5, Wizard),
        #     [MoneyTree(["PICK FRUIT", "CHOP"])],
        #     [[money_tree_refresh], [add_owl], {"money_tree_refresh" : [0], "add_owl" : [ Owl()]}]), ####change the number here to 4 post testing
        # Room("HASTILY ABANDOND KITCHEN", 
        #     "This room has a large cauldron suspended over a recently extinguished fire pit", 
        #     [Exit(0), Exit(1), Exit(2)], 
        #     MonsterSpawning(5, Goblin, 8, Skeleton),
        #     [Cauldron(0, ["RELIGHT FIRE", "COOK"], ""),
        #         Chest(1, ["OPEN"], " without a lock."),
        #         Chest(2, ["BREAK THE LOCK", "USE A KEY"], " that looks kinda tough.", challenge=6, contents=[40, StatMedallion(), misc_options["SHIELD"]]),
        #         Chest(3, ["BREAK THE LOCK", "USE A KEY"], " that looks real tough.", challenge=10, contents=[armor_options["MAGIC PLATE"], weapon_options["BATTLE AXE"]]),
        #         Chest(4, ["BREAK THE LOCK", "USE A KEY"], " it looks pretty weak.", challenge=2, contents=[misc_options["KEY"]])],
        #     [[], [change_room_description], {"change_room_description": [0, "This room has a large cauldron suspended over a recently lit fire."]}]),
        # Room("AUTUMNAL FORREST ROOM", 
        #     "A grove of maple trees, the leaves have changed color for the fall.", 
        #     [Exit(0), Exit(1), Exit(2), Exit(3)], 
        #     MonsterSpawning(5, Goblin, 8, Skeleton),
        #     [Tree(1, ["PICK FRUIT", "CHOP"], " maple"),
        #         Tree(2, ["PICK FRUIT", "CHOP"], " maple"),
        #         Tree(3, ["PICK FRUIT", "CHOP"], " maple"),
        #         Tree(4, ["PICK FRUIT", "CHOP"], " maple"),
        #         Tree(5, ["PICK FRUIT", "CHOP"], " maple"),
        #         Tree(6, ["PICK FRUIT", "CHOP"], " maple")],
        #     [[], [add_owl], {"add_owl" : [ Owl()]}]),
        # Room("MAGIC TREE GROVE",
        #     "A small grove of three glowing birch trees, a sourceless breeze is gently blowing here.",
        #     [Exit(0), Exit(1), Exit(2)],
        #     MonsterSpawning(1, Skeleton, 2, "TWICE"),
        #     [GlowingTree(1, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing birch", challenge=6),
        #         GlowingTree(2, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing birch", challenge=6),
        #         GlowingTree(3, ["CHOP"], " glowing birch sapling", challenge=3)],
        #     [[tree_inspect_renew], [add_owl], {"add_owl" : [Owl()]}]),
        # Room("MEDIUM MAGIC TREE",
        #     "A large chamber with a glowing elm tree, a sourceless breeze is gently blowing here.",
        #     [Exit(0), Exit(1), Exit(2)],
        #     MonsterSpawning(1, Skeleton, 2, "TWICE"),
        #     [GlowingTree(0, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing elm", challenge=10)],
        #     [[tree_inspect_renew], [add_owl], {"add_owl" : [Owl()]}]),
        # Room("GIANT SEQUOIA CHAMBER",
        #     "A massively expansive cavern with a glowing, giant sequoia tree in its center. A sourceless breeze is gentle blowing here.",
        #     [Exit(0), Exit(1), Exit(2)],
        #     MonsterSpawning(4, Minotaur),
        #     [GlowingTree(0, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing giant sequoia", challenge=15)],
        #     [[tree_inspect_renew], [add_owl], {"add_owl" : [Owl()]}]),
        # Room("BILL'S HOVEL", 
        #     "A small room with a bedroll, an extinguished firepit, and some small trinkets on a raw wood table.", 
        #     [Exit(0), Exit(1), Exit(2)],
        #     None,
        #     [Breakable("TABLE", 0, ["CHOP"], " A short section of a tree trunk being used as a table. You can count 21 rings.", 0, 2, contents=misc_options["WOOD"])],
        #     [[add_interactable, change_room_description], [break_the_table], {"add_interactable" : [3, NPC(0, 
        #                                                                                                     ["TALK", "ROB"], 
        #                                                                                                     " A short, teenage-looking, boy with pointed ears and a shaved head.", 
        #                                                                                                     "BILL", 
        #                                                                                                     ["he", "him", "his", "his", "himself"], 
        #                                                                                                     ["Look it's not much but its quiet and I like it here.", "Hey hey hey that's mine! Get out!", "Get out."], 
        #                                                                                                     6)], 
        #                                                                         "change_room_description" : [3, "A small room with a bedroll, an extinguished firepit, and some small trinkets on a raw wood table. A younger looking kid is hanging out and practicing some wood carving."]}]),
        # Room("SHIELD'S SMITHY",
        #     "A bare-bones forge with multiple BATTLE AXES on display. A wooden sign is propped up that reads 'SHIELD'S SMITHY'.",
        #     [Exit(0), Exit(1), Exit(2), Exit(3)],
        #     None,
        #     [Breakable("SIGN", 0, ["OBSERVE", "CHOP"], " A wooden sign for the smithy. It was someone's creative outlet for longer than it should've been.", 0, 1, contents=misc_options["WOOD"]),
        #         Artisan(0, 
        #                 ["TALK", "ROB", "SELL", "TRADE"],
        #                 "A scrawnier-looking elvish fellow, they have well conditioned hair for a blacksmith.",
        #                 "SHIELD",
        #                 ["they", "them", "theirs", "their", "themself"],
        #                 ["Welcome to SHIELD'S SMITHY! I'm Shield, the name was a poor choice...", "Woah woah woah woah woah that's not how this works here!", "Sorry, I just gotta ask you to leave.", "Ooh what're we selling today?", "Ayy thanks for that, I appreciate it!", "Mmmm yeah sorry I don't think you've got much I can buy.", "Most Minotaurs on the final floor use a BATTLE AXE. They're incredibly deadly, which is why I sell them to adventurers! 120 dollar bills for one!"],
        #                 9,
        #                 120,
        #                 obtain_item)],
        #     [[], [break_the_table], {"obtain_item" : [weapon_options["BATTLE AXE"], "You traded with SHIELD and recieved a BATTLE AXE for 120 dollar bills!"]}]),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("SECOND FLOOR TUNNEL", 
        #     "A narrow tunnel softly spiraling downward. This is the path to the dungeon's second floor, necessary to finding the idol.", 
        #     [Exit(0), Exit(1, Room("SECOND FLOOR LANDING", 
        #                                 "The entrance chamber to the second floor is built of smooth, blue bricks. Decorative pillars dot the edges, and an archway leads to three exits leading deeper into the dungeon.", 
        #                                 exits=[Exit(0), Exit(1), Exit(2), Exit(3)]))])
        ],
    [
        Room("SLEEPING MINOTAUR",
            "An open chamber with a minotaur sleeping on a fur rug.",
            [Exit(0)],
            None,
            [SleepingMinotaur("It seems fast asleep. Admittedly its a cozy-looking rug"),
                Tree(1, ["PICK FRUIT", "CHOP"], " magnolia", 3),
                Tree(2, ["PICK FRUIT", "CHOP"], " magnolia", 3),
                Tree(3, ["PICK FRUIT", "CHOP"], " magnolia", 3)],
            [[], [change_room_description], {"add_monsters" : [0, 1, Minotaur], "change_room_description" : [0, "An open chamber with a minotaur standing alert on a fur rug."]}]),
        Room("CHASM ROOM",
            "A narrow chasm",
            [Exit(0)],
            MonsterSpawning(7, FlyingGoblin, 10, "TWICE"),
            [Chasm(0, ["JUMP", "CROSS THE BRIDGE", "TAKE THE BRIDGE", "THROW ROCKS"], ". After a moment you hear it clanking against the hard stone below.", 5, "MAGIC")],
            [[], [], {"change_room" : [Exit(2, Room("CHASM LANDING",
                                                    "A hard stone landing, its a strange place for a mural to be.",
                                                    [Exit(0), Exit(1), Exit(2), Exit(3)],
                                                    None,
                                                    [ExitHold("MURAL", ["OBSERVE"], "An ambitous painting of a marketplace. The artist ran out of space on the right.", " If you're being honest it's pretty amateurish.")],
                                                    [[block_exit], [], {"block_exit" : [0, False]}]
                                                    ))]}]),
        Room("MAGMA RIVER", 
            "A 10ft wide river of magma flows in your path, blocking the exit opposite from you", 
            [Exit(0)], 
            MonsterSpawning(5, MagmaGoblin, 10, "TWICE"),
            [MagmaRiver(0, ["JUMP", "BUILD BRIDGE", "THROW ROCKS"], "")]),
        Room("ENCHANTMENT HOLLOW",
            "An illusion covers the entrance to this hollow, though you're allowed to see through it. A thin, bald man wearing a mask is studying a book- which produces a green mist.",
            [Exit(0)],
            None,
            [GlowingTree(1, ["PICK FRUIT", "CHOP"], " glowing dogwood", 1, 15),
                Cauldron(0, ["RELIGHT FIRE", "COOK"], ""),
                Artisan(0, 
                    ["TALK", "ENCHANT", "SELL", "ROB"],
                    "A thin, bald man with a mask over his mouth and nose. He looks late 40's and has a piercing look in is eyes.", 
                    "MODERN", 
                    ["he", "him", "his", "his", "himself"], 
                    ["Have you come for an enchantment? I require a PLATEMAIL armor and no less than 250 dollar bills.", "I could exile you to vile realms if you were worth the breath, begone filth!", "Don't tempt me.", "Yes, what do you have? I can make use of many things.", "May this serve us both well.", "My time is precious, don't ask if you have nothing to sell.", "You want me to ENCHANT your PLATEMAIL and make it MAGIC PLATE for 250 dollar bills?"],
                    18,
                    250,
                    obtain_item,
                    [MagicWand(), misc_options["KEY"], misc_options["PAIR OF GOLEM EYES"], misc_options["MINOTAUR HORN"], misc_options["GLOWING FRUIT"], misc_options["RUBY DUST"], misc_options["SEA CREATURE MEAT"]])],
            [[], [], {"obtain_item": [armor_options["MAGIC PLATE"], "You hired MODERN to ENCHANT your PLATEMAIL for 250 dollar bills!"],
                        "change_room_description": [0, "An illusion covers the entrance to this hollow, though you're allowed to see through it. A thin, bald man wearing a mask is studying a book- which produces a green mist."]}]),
        Room("GOLEM FACTORY",
            "A rank smell fills this chamber, along with the humming of machines and whistling of released steam. A large drill digs into the cave bed, feeding mud into a massive machine next to it. Two large green crystals power, the machine as it produces a MUD GOLEM.",
            [Exit(0), Exit(1), Exit(2)],
            MonsterSpawning(1, MudGolem),
            [Inspectable("MACHINE", 0, ["INSPECT"], "A massive achievment of artificery. This machine is making MUD GOLEMS and running nonstop.", 1, 4, inspect_machine),
                Breakable("GREEN GEM", 1, ["BREAK"], "A green gemstone 1 foot in diameter.", 3, 2, 9),
                Breakable("GREEN GEM", 2, ["BREAK"], "A green gemstone 1 foot in diameter.", 3, 2, 9),
                Breakable("DRILL", 0, ["BREAK"], "A drill that feeds mud into the machine.", 3, 2, 14)],
            [[], [golem_machinery], {"add_monsters" : [0, 1, MudGolem], "change_monster_spawning": [0, None]}]),
        Room("STELLA'S TRADE CAMP",   #***UPDATE SHOPS TO RESTOCK MORE SLOWLY
            "A canvas tent opened in the front reveals a pleasent interior. Currently empty shelves as a woman in her 60's appears to be packing up.", 
            [Exit(0), Exit(1), Exit(2)],
            None,
            [ShopOwner(0, 
                        ["TALK", "ROB", "BUY", "SELL"], 
                        "Trader in her 60's. Her black hair is in a high bun, and she's wearing square rimmed glasses.", 
                        "STELLA", 
                        ["she", "her", "hers", "her", "herself"], 
                        ["Hey there friend, let me know if you have any questions about my wares!", "Hey I saw that! Drop it and get out of my shop!", "I'm not doing business with someone who tried to rob me. Scram!", "Ooh what do ya got?", "Pleasure doing buisiness with you!", "Mmm you don't really have anything to sell. Come back later, I'd love to see what you find!", "What's catching your eye?", "Afraid I'm all out of stock friend! I'll get some new items soon!"], 
                        10, 
                        [misc_options["GLOWING FRUIT"], misc_options["KEY"], misc_options["KEY"], HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), DurabilityGem(), DurabilityGem(), DurabilityGem(), DurabilityGem(), SmokeBomb(), SmokeBomb(), SmokeBomb(), SmokeBomb(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), StatMedallion(), StatMedallion(), armor_options["GAMBESON"], weapon_options["LONGSWORD"]])],
            [[shop_refresh], [], {"shop_refresh" : [2, [misc_options["GLOWING FRUIT"], misc_options["KEY"], misc_options["KEY"], HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), DurabilityGem(), DurabilityGem(), DurabilityGem(), DurabilityGem(), SmokeBomb(), SmokeBomb(), SmokeBomb(), SmokeBomb(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), StatMedallion(), StatMedallion(), armor_options["GAMBESON"], weapon_options["LONGSWORD"]], "Good news friend, I just restocked my shop! Let me know if you have any questions.", "Hey there friend, let me know if you have any questions about my wares!"]}]),
        Room("GOBLIN SWARM ROOM",
            "An open room with a huge stretch towards the exit, it smells of GOBLIN.",
            [Exit(0), Exit(1)],
            MonsterSpawning(100, Goblin),
            adjustments=[[add_monsters, change_monster_spawning],
                        [], 
                        {"add_monsters" : [1, 7, Goblin], "change_monster_spawning" : [2, MonsterSpawning(1, Goblin, 3, "TWICE")]}]),
        Room("HALLWAY TO PLATE 1",
            "A long brick hallway with faux windows that look out to more bricks.",
            [Exit(0), Exit(1, Room("HALLWAY TO PLATE 2",
                                    "A short hallway of bricks, bound by a metal instead of mortar.",
                                    [Exit(0), Exit(1, Room("PLATE ROOM",
                                                            "A small chamber with a short set of steps leading up to a platform with two chests.",
                                                            [Exit(0)],
                                                            None,
                                                            [Chest(1, ["OPEN"], " with an ornate metal trim.", contents=[armor_options["PLATEMAIL"]]),
                                                            Chest(2, ["OPEN"], " that's fairly small and has a good scent.", contents=[GreaterHealthPotion()])]))],
                                    adjustments=[[adjustment_print, add_monsters], [], {"add_monsters" : [2, 8, Skeleton], "adjustment_print" : [2, " A swarm of skeletons has arrived in this room!"]}]))],
            adjustments=[[adjustment_print, add_monsters], [], {"add_monsters" : [2, 8, Skeleton], "adjustment_print" : [2, " A swarm of skeletons has arrived in this room!"]}]),
        Room("FAIRY ROOM",
            "A shallow stone fountain with a few inches of standing water. A fairy floats about, as the theme from Zelda plays.",
            [Exit(0)],
            None,
            [Fairy(0, 
                    "A young looking humanlike creature, with pointy ears and dragonfly wings", 
                    "KANE", 
                    ["she", "her", "hers", "her", "herself"], 
                    ["You look silly.", "Are you kidding?? I could eat you, give it back!", "You're a jerk, I don't hang out with jerks. Jerk", "Yeah I'll buy! Got anything stinky?", "This looks fun! Thanks!", "Nothing you have looks that interesting.", "Sure, I can teleport you to a room you've been to! It'll cost you though, 40 dollar bills or 20 blades of grass!", "Sweet!! Where to?", "All right, see you later!"],
                    6)]),
        Room("FINAL FLOOR MARKET",   #***UPDATE SHOPS TO RESTOCK MORE SLOWLY
            "An unexpectedly inviting market with a canvas tent, a forge, and a cauldron over an unlit fire.", 
            [Exit(0), Exit(1), Exit(2), Exit(3)],
            interactables=[ShopOwner(0, 
                                    ["TALK", "ROB", "BUY", "SELL"], 
                                    "A tall woman in her 30's. She's wearing PLATEMAIL armor, has multiple scars, and a shaved head with two short horns.", 
                                    "GREEN", 
                                    ["she", "her", "hers", "her", "herself"], 
                                    ["There aren't many safe spaces to sell on the final floor. We decided to share this one.", "I've dealt with worse down here, I'll deal with you too theif!", "Piss off punk, I'm not trading with you.", "Oh definitely, let's see what you're selling!", "Nice working with you!", "Sorry I gotta be picky, and I don't see anything on you I'd want to buy", "Here's the haul for now, see anything you like?", "I don't really have anymore to sell, I'll head out and get some new plunder soon."], 
                                    12, 
                                    [misc_options["KEY"], misc_options["KEY"], misc_options["KEY"], HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), DurabilityGem(), DurabilityGem(), DurabilityGem(), DurabilityGem(), SmokeBomb(), SmokeBomb(), SmokeBomb(), SmokeBomb(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), StatMedallion(), StatMedallion(), StatMedallion(), armor_options["CHAINMAIL"], weapon_options["LONGSWORD"], misc_options["SHIELD"], misc_options["MAGIC BRIDGE"]]),
                            Artisan(0,
                                    ["TALK", "ROB", "HIRE", "SELL"],
                                    "A middle aged man with a silver mustache and pompadour. He's wearing a heavy apron and a muscular physique.",
                                    "RYE",
                                    ["he", "him", "his", "his", "himself"],
                                    ["There's a guy that hangs out on this floor who can enchant armor, I can make you a set of PLATEMAIL if you like.", "C'mon, don't be like that.", "Sorry, I can't trust doing business with you.", "Ah I'm sure you have loads of interesting things, to have made it this far.", "Lovely doing business with you!", "Respectfully, you don't have much I could put to use right now. Come back later, I'm sure you'll find something good down here.", "For you, I could make some PLATEMAIL for 150 dollar bills."],
                                    12,
                                    150,
                                    obtain_item,
                                    [Pie(), Pie(), SmokeBomb(), DurabilityGem(), armor_options["PLATEMAIL"], weapon_options["BATTLE AXE"]]),
                            Cauldron(0, ["RELIGHT FIRE", "COOK"], ""),
                            Breakable("CHAIR", 0, ["SIT", "CHOP"], "A wood stump by the cauldron, would be good for sitting.", 0, 1, contents=misc_options["WOOD"])],
            adjustments=[[shop_refresh], 
                        [change_room_description], 
                        {"shop_refresh" : [2, [misc_options["KEY"], misc_options["KEY"], misc_options["KEY"], HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), DurabilityGem(), DurabilityGem(), DurabilityGem(), DurabilityGem(), SmokeBomb(), SmokeBomb(), SmokeBomb(), SmokeBomb(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), StatMedallion(), StatMedallion(), StatMedallion(), armor_options["CHAINMAIL"], weapon_options["LONGSWORD"], misc_options["SHIELD"], misc_options["MAGIC BRIDGE"]], "Nice timing, I just got back from an excursion. Check out my new wares!",  "Here's the haul for now, see anything you like?"],
                        "obtain_item": [armor_options["PLATEMAIL"], "You hired RYE to make you PLATEMAIL for 150 dollar bills!"],
                        "change_room_description": [0, "An unexpectedly inviting market with a canvas tent, a forge, and a cauldron over an open fire."]}]),
        Room("CAVE IN",
            "A rocky tunnel with heavy timbers reenforcing the walls.",
            [Exit(0), Exit(1, Room("EXCAVATOR ROOM",
                                    "A rocky chamber with heavy timbers reenforcing the walls. A burly woman sits at a table with a plate of food and some drink, nearby a display rack holds various digging and mining tools.",
                                    [Exit(0), Exit(1), Exit(2), Exit(3)],
                                    None,
                                    [Breakable("TABLE", 0, ["SIT", "CHOP"], " A picnic style table.", 0, 2, contents=misc_options["WOOD"]),
                                        RedHerring("DISPLAY RACK", 0, ["LICK"], "A metal frame with multiple hooks for hanging tools.", " HARBOR: Please stop licking my tools?"),
                                        Artisan(0, 
                                                ["TALK", "ROB", "SELL", "HIRE"],
                                                "A buff woman in her late 50's. She has short, light brown hair and is covered with sick tattoos.",
                                                "HARBOR",
                                                ["she", "her", "hers", "her", "herself"],
                                                ["That tunnel had another cave in huh? There's something unnatural about it, but that's what I'm here for.", "Hey! You want to start something??", "Beat it, I don't need to deal with you.", "Yeah I'll take a look, what'd'ya have?", "Nice, I appreciate it", "You don't really have anything useful to me.", "I can clear the path if you want but it's gonna cost. Charity doesn't buy much. 20 dollar bills if you're interested."],
                                                6,
                                                20,
                                                clear_cave_in)],
                                    [[], [break_the_table], {"add_interactable" : [0, None]}]))],
            MonsterSpawning(5, Goblin, 8, Skeleton), 
            [ExitHold("ROCK PILE", ["INSPECT"], "A pile of rocks blocking your path.", "Unless you can INSPECT your way through a cave in, this isn't going away any time soon."),
            ExitHold("TIMBER FRAMES", ["INSPECT"], "Multiple wooden frames meant to support the overhead rocks.", "There seem to be a lot for a tunnel this unremarkable, especially considering they didn't work that well.")],
            [[block_exit], [], {"block_exit": [0, " As you enter the tunnel, the room begins shaking heavily. Several large bolders fall behind you, blocking your path back. After a moment the shaking stops."]}]),
        Room("Second Floor Test", "Second Floor test Room1", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(6, Wizard, 10, "TWICE")),
        Room("Second Floor Test", "Second Floor test Room2", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(6, Wizard, 9, MudGolem)),
        Room("Second Floor Test", "Second Floor test Room3", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(4, Skeleton, 8, "TWICE")),
        Room("Second Floor Test", "Second Floor test Room4", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        Room("Second Floor Test", "Second Floor test Room5", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        Room("Second Floor Test", "Second Floor test Room6", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        # Room("Second Floor Test", "Second Floor test Room", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(7, MudGolem)),
        # Room("Second Floor Test", "Second Floor test Room", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        Room("FINAL FLOOR TUNNEL", "An ornate set of smoothly carved, stone, stairs descending downward for a mile. This is the path to the dungeon's final floor, where you can find the idol and the exit.", [Exit(0), Exit(1, (Room("FINAL FLOOR LANDING", "The entrance chamber to the final floor is flooded with knee high, glowing, green, liquid. Wading into the chamber, you see the paths ahead are lined with rows of stone fangs.", [Exit(0), Exit(1), Exit(2), Exit(3)])))])
        ],
    [
        Room("Final Floor Test", "Final Floor test Room1", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(4, Wizard, 8, "TWICE")),
        # Room("Final Floor Test", "Final Floor test Room", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(1, Skeleton, 4, "TWICE"), [], [Skeleton(), Skeleton()]),
        Room("Final Floor Test", "Final Floor test Room3", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(7, Minotaur)),
        Room("Final Floor Test", "Final Floor test Room4", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(7, Minotaur)),
        Room("Final Floor Test", "Final Floor test Room5", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, MudGolem, 10, "TWICE")),
        Room("Final Floor Test", "Final Floor test Room6", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(2, MudGolem)),

        ]

]