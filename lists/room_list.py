from classes.dungeon.room_components import Exit, MonsterSpawning
from classes.dungeon.room import Room
from lists.monsters_list import Goblin, Skeleton, Wizard, MudGolem, Minotaur, Avatar, MagmaGoblin
from lists.interactables_list import Pool, GlowingCrystal, Chest, MagmaRiver, Tree, Cauldron, NPC
from lists.items_lists import weapon_options, armor_options, misc_options, HealthPotion, StatMedallion, PowerBerry, DurabilityGem, MagicWand, SmokeBomb, GreaterHealthPotion
from lists.adjustments_list import add_to_interactable, add_to_description, add_monsters, change_monster_spawning, sea_creature_defeated, tree_inspect_renew

room_list = [ 
    [
        Room("Placeholder Rooms Maxed", 
            'A deadend with a sign that reads "Sorry, more rooms will be added soon!"', 
            [Exit(0), Exit(1)]) #the second exit needs to be removed when this room is updated (maybe)
        ],
    [
        Room("Dungeon Entrance", 
            "Here's a short placeholder description about the Dungeon Entrance.", 
            [Exit(0, Room("Go Home", "You decide not to explore the dungeon. Probably a good idea.", None)), Exit(1), Exit(2)]),
        Room("Pond Room", 
            "A room with a small pond.", 
            [Exit(0), Exit(1), Exit(2)], 
            MonsterSpawning(1, Goblin, 5, Skeleton), 
            [Pool(0, ["SWIM", "THROW ROCKS"], "that doesn't look too deep.")],
            [[add_to_interactable, add_to_description],
                [sea_creature_defeated], 
                {"add_to_interactable" : [2, "INSPECT SHADOW"],
                "add_to_description" : [2, ".. Wait- there's a shadow in the water that wasn't there before."],
                "damage_player" : ["Your armor is too heavy to swim in!", 2]}]),
        #Room("Glowing Crystals Room", 
        #    "A room with some glowing crystals.", 
        #    [Exit(0), Exit(1), Exit(2), Exit(3)], 
        #    MonsterSpawning(5, Goblin, 8, Skeleton), 
        #    [GlowingCrystal(1, ["SHATTER", "INSPECT"], " human baby."), 
        #        GlowingCrystal(2, ["SHATTER", "INSPECT"], " chair."), 
        #        GlowingCrystal(3, ["SHATTER", "INSPECT"], "n adult horse.")]),
        #Room("Magma River", 
        #    "A 10ft wide river of magma flows in your path, blocking the exit opposite from you,", 
        #    [Exit(0)], 
        #    MonsterSpawning(5, MagmaGoblin, 8, "TWICE"),
        #    [MagmaRiver(0, ["JUMP", "BUILD BRIDGE", "THROW ROCKS"], "")]),
        #Room("Hastily abandoned kitchen", 
        #    "This room has a large cauldron suspended over a recently extinguished fire pit", 
        #    [Exit(0), Exit(1), Exit(2)], 
        #    MonsterSpawning(5, Goblin, 8, Skeleton),
        #    [Cauldron(1, ["RELIGHT FIRE", "COOK"], ""),
        #        Chest(1, ["OPEN"], " without a lock."),
        #        Chest(2, ["BREAK THE LOCK", "USE A KEY"], " that looks kinda tough.", challenge=6, contents=[40, StatMedallion(), misc_options["SHIELD"]]),
        #        Chest(3, ["BREAK THE LOCK", "USE A KEY"], " that looks real tough.", challenge=10, contents=[armor_options["MAGIC PLATE"], weapon_options["BATTLE AXE"]]),
        #        Chest(4, ["BREAK THE LOCK", "USE A KEY"], " it looks pretty weak.", challenge=2, contents=[misc_options["KEY"]])]),
        #Room("Autumnal Forrest Room", 
        #    "A grove of maple trees, the leaves have changed color for the fall.", 
        #    [Exit(0), Exit(1), Exit(2), Exit(3)], 
        #    MonsterSpawning(5, Goblin, 8, Skeleton),
        #    [Tree(1, ["PICK FRUIT", "CHOP"], " maple"),
        #        Tree(2, ["PICK FRUIT", "CHOP"], " maple"),
        #        Tree(3, ["PICK FRUIT", "CHOP"], " maple"),
        #        Tree(4, ["PICK FRUIT", "CHOP"], " maple"),
        #        Tree(5, ["PICK FRUIT", "CHOP"], " maple"),
        #        Tree(6, ["PICK FRUIT", "CHOP"], " maple")]),
        #Room("Magic Tree Grove",
        #    "A small grove of three glowing birch trees, a sourceless breeze is gentle blowing here.",
        #    [Exit(0), Exit(1), Exit(2)],
        #    MonsterSpawning(1, Skeleton, 2, "TWICE"),
        #    [Tree(1, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing birch", challenge=6),
        #        Tree(2, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing birch", challenge=6),
        #        Tree(3, ["CHOP"], " glowing birch sapling", challenge=3)],
        #    [[tree_inspect_renew], []]),
        #Room("Medium Magic Tree",
        #    "A large chamber with a glowing elm tree, a sourceless breeze is gentle blowing here.",
        #    [Exit(0), Exit(1), Exit(2)],
        #    MonsterSpawning(1, Skeleton, 2, "TWICE"),
        #    [Tree(1, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing elm", challenge=10)],
        #    [[tree_inspect_renew], []]),
        Room("Giant Sequioa Magic Tree",
            "A massively expansive cavern with a glowing, giant sequoia tree in its center. A sourceless breeze is gentle blowing here.",
            [Exit(0), Exit(1), Exit(2)],
            MonsterSpawning(4, Minotaur),
            [Tree(1, ["PICK FRUIT", "CHOP", "INSPECT"], " glowing giant sequoia", challenge=15)],
            [[tree_inspect_renew], []]),
        #Room("Sleeping Quarters", 
        #    "A small room with a bedroll, an extinguished firepit, and some small trinkets on a raw wood table.", 
        #    [Exit(0), Exit(1), Exit(2)]),
        Room("Trader's Camp", 
            "A canvas tent opened in the front reveals a pleasent interior. Currently empty shelves as a woman in her 60's appears to be packing up.", 
            [Exit(0), Exit(1), Exit(2)],
            interactables=[NPC(0, 
                            ["TALK", "ROB", "BUY", "SELL"], 
                            "Trader in her 60's. Her brown hair is in a high pony, and she's wearing square rimmed glasses.", 
                            "STELLA", 
                            ["she", "her"], 
                            ["Hey there friend, let me know if you have any questions about my wares!", "Hey I saw that! Drop it and get out of my shop!", "I'm not doing business with someone who tried to rob me. Scram!", "What's catching your eye?", "Pleasure doing buisiness with you!", "Afraid I'm all out of stock friend! I'll get some new items soon!", "Ooh what do ya got?", "Mmm you don't really have anything to sell. Come back later, I'd love to see what you find!"], 
                            10, 
                            [misc_options["GLOWING FRUIT"], misc_options["KEY"], misc_options["KEY"], HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), HealthPotion(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), PowerBerry(), DurabilityGem(), DurabilityGem(), DurabilityGem(), DurabilityGem(), SmokeBomb(), SmokeBomb(), SmokeBomb(), SmokeBomb(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), GreaterHealthPotion(), StatMedallion(), StatMedallion(), StatMedallion(), armor_options["CHAINMAIL"], weapon_options["LONGSWORD"]], 36)]),
        #Room("Goblin Swarm Room",
        #    "An open room with a huge stretch towards the exit, it smells of GOBLIN.",
        #    [Exit(0), Exit(1)],
        #    MonsterSpawning(100, Goblin),
        #    adjustments=[[add_monsters, change_monster_spawning],
        #                [], 
        #                {"add_monsters" : [1, 7, Goblin],
        #                "change_monster_spawning" : [2, MonsterSpawning(1, Goblin, 3, "TWICE")]}]),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(1, Wizard, 2, "TWICE")), #CHANGE AFTER TESTING!
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        #Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)], MonsterSpawning(5, Goblin, 8, Skeleton)),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        # Room("Deadend", "Placeholder for a deadend", [Exit(0)]),
        Room("Second Floor Tunnel", "A narrow tunnel softly spiraling downward. This is the path to the dungeon's second floor, necessary to finding the idol.", [Exit(0), Exit(1, link=Room("Second Floor Landing", "The entrance chamber to the second floor is built of smooth, blue bricks. Decorative pillars dot the edges, and an archway leads to three exits leading deeper into the dungeon.", exits=[Exit(0), Exit(1), Exit(2), Exit(3)]))])
        ],
    [
        Room("Second Floor Test", "Second Floor test Room1", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(6, Wizard, 10, "TWICE")),
        Room("Second Floor Test", "Second Floor test Room2", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(6, Wizard, 9, MudGolem)),
        Room("Second Floor Test", "Second Floor test Room3", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(4, Skeleton, 8, "TWICE")),
        Room("Second Floor Test", "Second Floor test Room4", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        Room("Second Floor Test", "Second Floor test Room5", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        Room("Second Floor Test", "Second Floor test Room6", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        # Room("Second Floor Test", "Second Floor test Room", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(7, MudGolem)),
        # Room("Second Floor Test", "Second Floor test Room", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, Wizard)),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        # Room("Hallway", "Placeholder for a hallway", [Exit(0), Exit(1)], MonsterSpawning(5, Goblin, 8, "TWICE")),
        Room("Final Floor Tunnel", "An ornate set of smoothly carved, stone, stairs descending downward for a mile. This is the path to the dungeon's final floor, where you can find the idol and the exit.", [Exit(0), Exit(1, (Room("Final Floor Landing", "The entrance chamber to the final floor is flooded with knee high, glowing, green, liquid. Wading into the chamber, you see the paths ahead are lined with rows of stone fangs.", [Exit(0), Exit(1), Exit(2), Exit(3)])))])
        ],
    [
        Room("Final Floor Test", "Final Floor test Room1", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(4, Wizard, 8, "TWICE")),
        # Room("Final Floor Test", "Final Floor test Room", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(1, Skeleton, 4, "TWICE"), [], [Skeleton(), Skeleton()]),
        Room("Final Floor Test", "Final Floor test Room3", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(7, Minotaur)),
        Room("Final Floor Test", "Final Floor test Room4", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(7, Minotaur)),
        Room("Final Floor Test", "Final Floor test Room5", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(5, MudGolem, 10, "TWICE")),
        Room("Final Floor Test", "Final Floor test Room6", [Exit(0), Exit(1), Exit(2)], MonsterSpawning(2, MudGolem)),


        ]

]